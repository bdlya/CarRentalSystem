// <auto-generated />
using System;
using CarRentalSystem.Persistence.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRentalSystem.Persistence.Data.Migrations
{
    [DbContext(typeof(CarRentalSystemContext))]
    [Migration("20210512092713_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.AdditionalWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalWorks");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AverageFuelConsumption")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CostPerHour")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentOrderId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int>("PointOfRentalId")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentOrderId")
                        .IsUnique()
                        .HasFilter("[CurrentOrderId] IS NOT NULL");

                    b.HasIndex("PointOfRentalId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalCost")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.PointOfRental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PointOfRentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Default address street one",
                            City = "Minsk",
                            Country = "Belarus",
                            Name = "CFL"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Default address street two",
                            City = "Hrodna",
                            Country = "Belarus",
                            Name = "CFL"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Default address street three",
                            City = "Moscow",
                            Country = "Russia",
                            Name = "SpaceStation"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Default address street four",
                            City = "Montreal",
                            Country = "Canada",
                            Name = "Independence"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Default address street five",
                            City = "Toronto",
                            Country = "Canada",
                            Name = "NoTime"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Default address street six",
                            City = "Toronto",
                            Country = "Canada",
                            Name = "Expensive"
                        });
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("RefreshTokenId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RefreshTokenId")
                        .IsUnique()
                        .HasFilter("[RefreshTokenId] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "adminOwner",
                            Name = "Admin",
                            PasswordHash = new byte[] { 240, 126, 46, 99, 109, 238, 44, 51, 146, 150, 143, 137, 158, 38, 29, 220, 73, 153, 159, 92, 123, 122, 69, 31, 169, 141, 149, 207, 32, 185, 117, 227, 147, 225, 86, 103, 229, 202, 28, 61, 76, 96, 202, 28, 179, 91, 237, 110, 245, 174, 255, 176, 252, 113, 174, 111, 147, 81, 236, 109, 111, 5, 74, 19 },
                            PasswordSalt = new byte[] { 176, 142, 49, 104, 140, 111, 97, 113, 126, 97, 217, 55, 174, 46, 34, 189, 30, 213, 154, 136, 136, 76, 176, 223, 233, 55, 154, 237, 84, 141, 123, 139, 111, 185, 240, 190, 134, 89, 182, 140, 139, 61, 37, 226, 18, 117, 3, 245, 46, 115, 110, 47, 255, 77, 169, 164, 37, 126, 91, 224, 80, 34, 139, 236, 65, 213, 203, 229, 213, 62, 113, 179, 230, 32, 99, 209, 64, 126, 244, 57, 0, 86, 251, 62, 101, 69, 217, 230, 88, 218, 182, 252, 69, 235, 45, 97, 111, 145, 241, 30, 119, 23, 82, 121, 99, 158, 47, 107, 137, 231, 52, 79, 157, 150, 178, 204, 62, 161, 75, 17, 198, 139, 54, 211, 46, 188, 204, 221 },
                            Role = "AdministratorOwner",
                            SurName = "Owner"
                        });
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Support.OrderAdditionalWork", b =>
                {
                    b.Property<int>("AdditionalServiceId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AdditionalServiceId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderAdditionalWorks");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Support.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.Car", b =>
                {
                    b.HasOne("CarRentalSystem.Domain.Entities.Main.Order", "CurrentOrder")
                        .WithOne("Car")
                        .HasForeignKey("CarRentalSystem.Domain.Entities.Main.Car", "CurrentOrderId");

                    b.HasOne("CarRentalSystem.Domain.Entities.Main.PointOfRental", "PointOfRental")
                        .WithMany("Cars")
                        .HasForeignKey("PointOfRentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentOrder");

                    b.Navigation("PointOfRental");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.Order", b =>
                {
                    b.HasOne("CarRentalSystem.Domain.Entities.Main.User", "CurrentCustomer")
                        .WithMany("Orders")
                        .HasForeignKey("CurrentCustomerId");

                    b.Navigation("CurrentCustomer");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.User", b =>
                {
                    b.HasOne("CarRentalSystem.Domain.Entities.Support.RefreshToken", "RefreshToken")
                        .WithOne("User")
                        .HasForeignKey("CarRentalSystem.Domain.Entities.Main.User", "RefreshTokenId");

                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Support.OrderAdditionalWork", b =>
                {
                    b.HasOne("CarRentalSystem.Domain.Entities.Main.AdditionalWork", "AdditionalService")
                        .WithMany("OrderAdditionalWorks")
                        .HasForeignKey("AdditionalServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRentalSystem.Domain.Entities.Main.Order", "Order")
                        .WithMany("OrderAdditionalWorks")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalService");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.AdditionalWork", b =>
                {
                    b.Navigation("OrderAdditionalWorks");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.Order", b =>
                {
                    b.Navigation("Car");

                    b.Navigation("OrderAdditionalWorks");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.PointOfRental", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Main.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CarRentalSystem.Domain.Entities.Support.RefreshToken", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
